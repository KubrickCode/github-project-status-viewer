name: Release

on:
  push:
    branches: [release]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=v$VERSION" >> $GITHUB_OUTPUT
          echo "📦 Version: v$VERSION"

      - name: Check if release exists
        id: check
        run: |
          if gh release view "v$(node -p "require('./package.json').version")" &>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "⚠️ Release already exists, skipping"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Generate changelog
        id: changelog
        if: steps.check.outputs.exists == 'false'
        run: |
          CURRENT="v$(node -p "require('./package.json').version")"
          PREVIOUS=$(git tag --sort=-v:refname | grep -v "$CURRENT" | head -1 || echo "")

          if [ -z "$PREVIOUS" ]; then
            echo "changelog=Initial MVP release" >> $GITHUB_OUTPUT
          else
            CHANGELOG=$(git log $PREVIOUS..HEAD --pretty=format:"- %s" --no-merges)
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGELOG" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        if: steps.check.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: ${{ steps.version.outputs.version }}
          body: |
            ## 🚀 What's New in ${{ steps.version.outputs.version }}

            ${{ steps.changelog.outputs.changelog }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
